apply plugin: 'com.android.application'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:support-v4:27.0.2'
    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation 'com.android.support:design:27.0.2'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    implementation 'com.google.code.gson:gson:2.8.2'

    implementation 'com.squareup.okhttp3:okhttp:3.9.1'

    // retrofit
    implementation('com.squareup.retrofit2:retrofit:2.3.0') {
        exclude module: 'okhttp'
    }
    implementation 'com.squareup.retrofit2:converter-scalars:2.3.0'

    // image loader
    implementation 'com.github.bumptech.glide:glide:4.4.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.4.0'
    implementation('com.github.bumptech.glide:okhttp-integration:4.4.0') {
        //exclude group: 'com.squareup.okhttp3', module: 'okhttp'
        transitive = false
    }

    implementation 'net.hockeyapp.android:HockeySDK:5.0.4'
    implementation 'com.tencent.bugly:crashreport:2.6.6'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId "site.linyuange.awesome.splash"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "0.0.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            resValue "string", "app_name", "Debug Awesome Splash"
        }
        release {
            resValue "string", "app_name", "Awesome Splash"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes.each {
        def buildType = 'debug'.equals(it.name) ? 'debug' : it.name

        def Properties props = new Properties()
        def propFile = file("../config-${buildType}.properties")

        if (propFile.canRead()) {
            props.load(new FileInputStream(propFile))
            if (props != null) {
                it.resValue("string", "hockey_app_id", "\"${props['HOCKEY_APP_ID']}\"")
                it.buildConfigField("String", "UNSPLASH_APPLICATION_ID", "\"${props['UNSPLASH_APPLICATION_ID']}\"")
                it.buildConfigField("String", "API_UNSPLASH_COM", "\"${props['API_UNSPLASH_COM']}\"")
                it.buildConfigField("String", "BUGLY_APP_ID", "\"${props['BUGLY_APP_ID']}\"")
            }
        }
    }
}
